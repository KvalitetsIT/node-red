name: Docker Image CI

on:
  push:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: node-red

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout node-red-docker for custum build
      run: git clone https://github.com/node-red/node-red-docker.git
        
    - name: Change Node.js to version 14 and build standard custum image
      run: |
        cd node-red-docker/docker-custom
        sed -i 's/NODE_VERSION=[0-9]*/NODE_VERSION=14/' docker-alpine.sh
        ./docker-alpine.sh
              
    - uses: actions/checkout@v2
    - name: Build the Docker image with dependencies enabled
      run: docker build . --file Dockerfile --tag $IMAGE_NAME
    
    - name: Log into registry
      run: docker login -u ${{ secrets.DOCKER_HUB_USER }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
      
    - name: Push image
      run: |
        IMAGE_ID=${{ github.repository }}
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

